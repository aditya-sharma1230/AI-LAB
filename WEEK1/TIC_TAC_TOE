import random

class TicTacToe:
    def __init__(self):
        print("NAME: Aditya Sharma, (USN: 1BM22CS021)")
        self.board = []

    def create_board(self):
        self.board = [['-' for _ in range(3)] for _ in range(3)]

    def get_random_first_player(self):
        return random.randint(0, 1)

    def fix_spot(self, row, col, player):
        self.board[row][col] = player

    def is_player_win(self, player):
        n = len(self.board)

        # Check rows
        for i in range(n):
            if all(self.board[i][j] == player for j in range(n)):
                return True

        # Check columns
        for i in range(n):
            if all(self.board[j][i] == player for j in range(n)):
                return True

        # Check diagonals
        if all(self.board[i][i] == player for i in range(n)):
            return True

        if all(self.board[i][n - 1 - i] == player for i in range(n)):
            return True

        return False

    def is_board_filled(self):
        for row in self.board:
            for item in row:
                if item == '-':
                    return False
        return True

    def swap_player_turn(self, player):
        return 'X' if player == 'O' else 'O'

    def show_board(self):
        for row in self.board:
            for item in row:
                print(item, end=" ")
            print()

    def start(self):
        self.create_board()
        player = 'X' if self.get_random_first_player() == 1 else 'O'

        while True:
            print(f"\nPlayer {player}'s turn")
            self.show_board()

            try:
                row, col = map(int, input("Enter row and column numbers to fix spot (1-3): ").split())
                if self.board[row - 1][col - 1] != '-':
                    print("Spot already taken. Try again.")
                    continue
            except (ValueError, IndexError):
                print("Invalid input. Enter numbers between 1 and 3.")
                continue

            self.fix_spot(row - 1, col - 1, player)

            if self.is_player_win(player):
                print(f"\nPlayer {player} wins the game!")
                self.show_board()
                break

            if self.is_board_filled():
                print("\nMatch Draw!")
                self.show_board()
                break

            player = self.swap_player_turn(player)

# Run the game
tic_tac_toe = TicTacToe()
tic_tac_toe.start()
